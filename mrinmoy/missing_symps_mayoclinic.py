import json

def unique_href_json(input_path, output_path):
    with open(input_path, encoding="utf-8") as f:
        data = json.load(f)
    seen = set()
    unique = []
    for entry in data:
        href = entry.get("href")
        if href and href not in seen:
            seen.add(href)
            unique.append({
                "id": entry.get("id"),
                "link_text": entry.get("link_text"),
                "href": href
            })
    with open(output_path, "w", encoding="utf-8") as f:
        json.dump(unique, f, ensure_ascii=False, indent=2)

def find_missing_indices(input_path, output_path):
    with open(input_path, encoding="utf-8") as f:
        data = json.load(f)
    ids = [entry.get("id") for entry in data if entry.get("id") is not None]
    if not ids:
        print("No ids found in the data.")
        return
    min_id, max_id = min(ids), max(ids)
    missing = [i for i in range(min_id, max_id + 1) if i not in ids]
    print(f"Missing indices: {missing}")
    return missing

if __name__ == "__main__":
    input_path = "c:/Users/MRINMOY/DataSetRefinement/mrinmoy/mayoclinic_links_with_id_unique_href.json"
    output_path = "c:/Users/MRINMOY/DataSetRefinement/mrinmoy/mayoclinic_links_with_id_unique.json"
    unique_href_json(input_path, output_path)
    missing_indices = find_missing_indices(input_path, output_path)
    # List of missing indices (replace with your actual list if needed)
    missing_indices = [23, 26, 27, 28, 29, 30, 31, 33, 34, 37, 54, 57, 63, 64, 67, 70, 72, 74, 101, 104, 105, 115, 118, 127, 136, 138, 140, 149, 150, 154, 156, 162, 164, 166, 167, 169, 184, 188, 189, 206, 209, 211, 212, 215, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 232, 234, 235, 243, 246, 247, 249, 251, 259, 262, 269, 272, 274, 281, 282, 284, 290, 302, 306, 308, 318, 319, 324, 340, 342, 344, 347, 353, 354, 355, 356, 357, 358, 373, 378, 386, 396, 400, 406, 408, 410, 411, 419, 422, 423, 426, 432, 433, 435, 436, 439, 443, 448, 453, 456, 463, 467, 468, 469, 471, 473, 474, 484, 488, 493, 494, 496, 499, 501, 504, 507, 510, 512, 513, 514, 517, 522, 527, 529, 531, 533, 535, 536, 538, 544, 545, 547, 553, 556, 568, 569, 570, 575, 576, 577, 579, 580, 586, 588, 589, 593, 596, 602, 604, 605, 608, 609, 616, 617, 618, 619, 621, 623, 627, 631, 632, 637, 638, 645, 646, 648, 652, 653, 654, 659, 661, 665, 668, 671, 685, 690, 693, 702, 704, 705, 708, 709, 710, 711, 712, 714, 717, 718, 723, 726, 727, 728, 731, 737, 739, 740, 741, 746, 747, 751, 762, 764, 767, 769, 771, 776, 779, 786, 788, 789, 790, 798, 799, 802, 803, 804, 806, 807, 809, 810, 818, 819, 821, 824, 825, 831, 832, 833, 834, 842, 843, 844, 845, 847, 848, 849, 850, 852, 853, 856, 858, 859, 860, 861, 862, 864, 865, 866, 868, 870, 871, 873, 874, 875, 876, 877, 878, 880, 881, 882, 883, 884, 886, 887, 890, 892, 893, 895, 896, 898, 899, 900, 901, 904, 907, 911, 912, 914, 916, 917, 920, 921, 922, 927, 928, 931, 932, 933, 934, 937, 941, 942, 945, 946, 947, 948, 950, 952, 953, 954, 955, 956, 958, 959, 960, 963, 967, 968, 970, 976, 977, 978, 979, 981, 990, 992, 993, 994, 1002, 1004, 1008, 1015, 1016, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1029, 1031, 1033, 1041, 1042, 1044, 1051, 1052, 1054, 1055, 1057, 1058, 1059, 1060, 1062, 1063, 1066, 1069, 1070, 1072, 1073, 1074, 1080, 1081, 1082, 1085, 1086, 1087, 1090, 1091, 1095, 1097, 1099, 1100, 1107, 1113, 1116, 1117, 1118, 1119, 1120, 1121, 1125, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1138, 1140, 1143, 1144, 1145, 1146, 1147, 1148, 1151, 1152, 1155, 1157, 1158, 1161, 1162, 1163, 1165, 1166, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1185, 1186, 1187, 1192, 1195, 1197, 1198, 1199, 1200, 1201, 1205, 1206, 1209, 1211, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1226, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1242, 1246, 1248, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1263, 1264, 1265, 1266, 1267, 1269, 1272, 1273, 1274, 1275, 1276, 1281, 1282, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1299, 1301, 1302, 1304, 1307, 1308, 1309, 1313, 1315, 1316, 1318, 1320, 1322, 1323, 1325, 1332, 1333, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1351, 1352, 1353, 1356, 1357, 1358, 1361, 1367, 1369, 1372, 1373, 1374, 1377, 1380, 1383, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1411, 1412, 1413, 1415, 1418, 1419, 1420, 1421, 1428, 1430, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1463, 1464, 1465, 1468, 1469, 1472, 1474, 1477, 1478, 1479, 1480, 1482, 1483, 1485, 1487, 1489, 1490, 1492, 1493, 1494, 1495, 1498, 1499, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1521, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1541, 1542, 1543, 1546, 1547, 1548, 1549, 1552, 1553, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1564, 1567, 1570, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1599, 1600, 1601, 1602, 1607, 1608, 1609, 1610, 1611, 1613, 1616, 1619, 1620, 1624, 1629, 1630, 1633, 1637, 1641, 1642, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1664, 1665, 1666, 1667, 1671, 1675, 1676, 1677, 1678, 1680, 1684, 1685, 1686, 1688, 1689, 1692, 1693, 1695, 1696, 1697, 1699, 1701, 1702, 1703, 1704, 1705, 1707, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1721, 1722, 1724, 1725, 1726, 1727, 1729, 1731, 1732, 1733, 1734, 1737, 1738, 1739, 1740, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1777, 1778, 1799, 1802, 1803, 1804, 1805, 1806, 1807, 1809, 1814, 1815, 1816, 1817, 1818, 1821, 1822, 1824, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1848, 1849, 1850, 1851, 1855, 1857, 1858, 1865, 1866, 1867, 1868, 1869, 1871, 1875, 1876, 1877, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1891, 1896, 1899, 1900, 1904, 1906, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1919, 1921, 1922, 1923, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1943, 1944, 1947, 1948, 1950, 1953, 1954, 1955, 1956, 1957, 1960, 1962, 1963, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1977, 1978, 1979, 1980, 1981, 1983, 1985, 1986, 1987, 1989, 1990, 1991, 1993, 1994, 1995, 1998, 1999, 2000, 2001, 2004, 2006, 2007, 2008, 2010, 2012, 2013, 2014, 2016, 2017, 2021, 2023, 2024, 2026, 2027, 2028, 2029, 2031, 2032, 2035, 2036, 2037, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2055, 2056, 2059, 2060, 2061, 2062, 2064, 2065, 2066, 2067, 2068, 2069, 2071, 2073, 2075, 2076, 2079, 2080, 2081, 2082, 2083, 2084, 2086, 2087, 2088, 2092, 2093, 2095, 2096, 2097, 2098, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115, 2117, 2118, 2119, 2120, 2121, 2122, 2124, 2125, 2126, 2127, 2128, 2129, 2131, 2132, 2133, 2134, 2136, 2137, 2138, 2139, 2140, 2141, 2143, 2144, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2159, 2160, 2161, 2162, 2166, 2167, 2168, 2169, 2170, 2171, 2173, 2174, 2175, 2179, 2180, 2182, 2184, 2185, 2186, 2189, 2193, 2194, 2196, 2197, 2198, 2200, 2201, 2203, 2205, 2206, 2207, 2208, 2209, 2211, 2212, 2213, 2214, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2225, 2227, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2243, 2244, 2245, 2247, 2249, 2250, 2251, 2252, 2253, 2256, 2257, 2258, 2260, 2261, 2262, 2263, 2264, 2265, 2267, 2268, 2271, 2272, 2273, 2274, 2275, 2276, 2279, 2280, 2281, 2282, 2283, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2309, 2310, 2311, 2312, 2313, 2315, 2316, 2317]

    # Load the unique hrefs with id and link_text
    with open("mrinmoy/mayoclinic_links_with_id_unique.json", "r", encoding="utf-8") as f:
        unique_links = json.load(f)
    # Filter for missing indices
    missing_links = [entry for entry in unique_links if entry.get("id") in missing_indices]

    # Save missing links to a file for scraping
    with open("mrinmoy/links_absent_from_filtered.json", "w", encoding="utf-8") as f:
        json.dump(missing_links, f, ensure_ascii=False, indent=2)

    print(f"Prepared {len(missing_links)} missing links for scraping.")